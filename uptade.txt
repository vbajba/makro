guimacro = assets/gui1.png
guistart = assets/gui2.png
aktywuj = assets/aktywuj.png
anuluj = assets/anuluj.png
wylacz = assets/x.png
minimalizuj = assets/-.png
macro = assets/macro.png
kopanie = assets/kopanie.png
funkcje = assets/funkcje.png
ustawienia = assets/ustawienia.png
config = assets/config.png
cslider = assets/slider.png
lewy = assets/lewy.png
prawy = assets/prawy.png
bind = assets/bind.png
cps = assets/cps.png

macro1 = assets/macro1.png
kopanie2 = assets/kopanie2.png
funkcje2 = assets/funkcje2.png
ustawienia2 = assets/ustawienia2.png
config2 = assets/config2.png

;Wczytywanie:
;Gui,3: Color, 202020
;Gui,3: -Caption 
;Gui,3: show, w600 h400
;Gui,3: Font, c353c43 s15
;Gui,3: Add, Text, x130 y160, Trwają przygotowania do uruchomienia..
;Gui,3: Add, Text, x275 y200 vTxT, 1 / 3
;sleep 1000
;GuiControl,3:, TxT, 2 / 3
;sleep 1000
;GuiControl,3:, TxT, 3 / 3
;sleep 2000
;GuiControl,3:, TxT
;goto Logowanie
;return

;Logowanie:
;Gui,3: Destroy
;sleep 2000
;Gui,2: Add, Picture, x0 y0, %guimacro%

;KodLicencji = zuziek
;Gui,2: Color, 585858
;Gui,2: Color,, 202020
;Gui,2: Font, c353c43 s15
;Gui,2: -Caption 
;Gui,2: Add, Edit, x195 y160 w233 h30 Limit21 vTypedPassWord hwndEDIT1 -E0x200 
;Gui,2: Font, c353c43 s15 
;SetCueBanner(EDIT1, "Proszę podać kod licencji...")
;Gui,2: Add, Picture, gaktywuj x120 y220 +BackgroundTrans, %aktywuj%
;Gui,2: Add, Picture, ganuluj x320 y220 +BackgroundTrans, %anuluj%
;Gui,2: Add, Picture, gwylacz x560 y15 +BackgroundTrans, %wylacz%
;Gui,2: Add, Picture, gminimalizuj x520 y15 +BackgroundTrans, %minimalizuj%
;Gui,2: show, w600 h400
;return

aktywuj:
Gui, Submit, NoHide 
IF TypedPassWord = %KodLicencji%
goto MAIN
Else
MsgBox, , Licencja, Wprowadzono błędny kod licencji.
return
anuluj:
ExitApp
return
wylacz:
ExitApp
return
minimalizuj:
WinMinimize
return

MAIN:
Gui,2: Destroy
Gui, Add, Tab2, buttons w100 vTAB_BUTTON x-100, Macro|Kopanie|Funkcje|Ustawienia|Config
Gui, Color, 202020
Gui, Add, Picture, gwylacz x560 y15 +BackgroundTrans, %wylacz%
Gui, Add, Picture, gminimalizuj x520 y15 +BackgroundTrans, %minimalizuj%
Gui, -Caption 
Gui, show, w600 h400

Gui, tab, Macro
Gui, Add, Picture, x0 y0, %guistart%
Gui, Add, Picture, gwylacz x560 y15 +BackgroundTrans, %wylacz%
Gui, Add, Picture, gminimalizuj x520 y15 +BackgroundTrans, %minimalizuj%
Gui, Add, Picture, gtab1 x0 y50 +BackgroundTrans, %macro1%
Gui, Add, Picture, gtab2 x0 y100 +BackgroundTrans, %kopanie%
Gui, Add, Picture, gtab3 x0 y150 +BackgroundTrans, %funkcje%
Gui, Add, Picture, gtab4 x0 y200 +BackgroundTrans, %ustawienia%
Gui, Add, Picture, gtab5 x0 y250 +BackgroundTrans, %config%
Gui, Add, Picture, x50 y-15 +BackgroundTrans, %lewy%
Gui, Add, Picture, x50 y175 +BackgroundTrans, %prawy%
Gui, Add, Picture, x5 y-35 +BackgroundTrans, %bind%
Gui, Add, Picture, x5 y160 +BackgroundTrans, %bind%
Gui, Add, Picture, x220 y30 +BackgroundTrans, %cps%
Gui, Add, Picture, x220 y230 +BackgroundTrans, %cps%

Gui, Font, s16 cWhite Bold, Arial
Gui, Add, Text, x550 y90 w40 h30 vValueAR, 0
Gui, Add, Text, x550 y290 w40 h30 vValueVK, 0

HBITMAP:= LoadPicture(cslider)
HBITMAP2:= LoadPicture(cslider)

Lewy := new CustomSlider("x250 y100 w200 h5 Range+0-15 BackGround0x353c43 c0xFFFFFF vLewy altsubmit", LewyD, hBitmap, "ValueAR")

Prawy := new CustomSlider2("x250 y300 w200 h5 Range+0-60 BackGround0x353c43 c0xFFFFFF vPrawy altsubmit", PrawyD, hBitmap2, "ValueVK")
Gui, tab, Kopanie
Gui, Add, Picture, x0 y0, %guistart%
Gui, Add, Picture, gwylacz x560 y15 +BackgroundTrans, %wylacz%
Gui, Add, Picture, gminimalizuj x520 y15 +BackgroundTrans, %minimalizuj%
Gui, Add, Picture, gtab1 x0 y50 +BackgroundTrans, %macro%
Gui, Add, Picture, gtab2 x0 y100 +BackgroundTrans, %kopanie2%
Gui, Add, Picture, gtab3 x0 y150 +BackgroundTrans, %funkcje%
Gui, Add, Picture, gtab4 x0 y200 +BackgroundTrans, %ustawienia%
Gui, Add, Picture, gtab5 x0 y250 +BackgroundTrans, %config%

Gui, tab, Funkcje
Gui, Add, Picture, x0 y0, %guistart%
Gui, Add, Picture, gwylacz x560 y15 +BackgroundTrans, %wylacz%
Gui, Add, Picture, gminimalizuj x520 y15 +BackgroundTrans, %minimalizuj%
Gui, Add, Picture, gtab1 x0 y50 +BackgroundTrans, %macro%
Gui, Add, Picture, gtab2 x0 y100 +BackgroundTrans, %kopanie%
Gui, Add, Picture, gtab3 x0 y150 +BackgroundTrans, %funkcje2%
Gui, Add, Picture, gtab4 x0 y200 +BackgroundTrans, %ustawienia%
Gui, Add, Picture, gtab5 x0 y250 +BackgroundTrans, %config%

Gui, tab, Ustawienia
Gui, Add, Picture, x0 y0, %guistart%
Gui, Add, Picture, gwylacz x560 y15 +BackgroundTrans, %wylacz%
Gui, Add, Picture, gminimalizuj x520 y15 +BackgroundTrans, %minimalizuj%
Gui, Add, Picture, gtab1 x0 y50 +BackgroundTrans, %macro%
Gui, Add, Picture, gtab2 x0 y100 +BackgroundTrans, %kopanie%
Gui, Add, Picture, gtab3 x0 y150 +BackgroundTrans, %funkcje%
Gui, Add, Picture, gtab4 x0 y200 +BackgroundTrans, %ustawienia2%
Gui, Add, Picture, gtab5 x0 y250 +BackgroundTrans, %config%

Gui, tab, Config 
Gui, Add, Picture, x0 y0, %guistart%
Gui, Add, Picture, gwylacz x560 y15 +BackgroundTrans, %wylacz%
Gui, Add, Picture, gminimalizuj x520 y15 +BackgroundTrans, %minimalizuj%
Gui, Add, Picture, gtab1 x0 y50 +BackgroundTrans, %macro%
Gui, Add, Picture, gtab2 x0 y100 +BackgroundTrans, %kopanie%
Gui, Add, Picture, gtab3 x0 y150 +BackgroundTrans, %funkcje%
Gui, Add, Picture, gtab4 x0 y200 +BackgroundTrans, %ustawienia%
Gui, Add, Picture, gtab5 x0 y250 +BackgroundTrans, %config2%
return

class CustomSlider
{
	__New(Options:="", val:="", HBITMAP:="", param_textfield:="") {
		if !RegExMatch(Options, "i)\bBackground\w+\b") {
			if RegExMatch(Options, "i)\bc\K\w+", bkColor)
				bkOpt := "Background"
		}
		this.textfield := param_textfield
		Gui, Add, Progress, h5 %Options% %bkOpt% hwndHPROG Disabled
		
		if RegExMatch(Options, "i)\bRange\K([\d-]+)-([\d-]+)", rng)
			this.rng_radio := Abs(rng2 - rng1)/15
		else
			this.rng_radio := 1
		
		GuiControlGet, pg, Pos, %HPROG%
		x := pgW * (val/this.rng_radio/15)
		
		Gui, Add, Pic, yp-5 x250 w15 h15 HWNDhBtn, % "HBITMAP:"   HBITMAP
		
		this.hProg := HPROG
		this.hBtn := hBtn
		
		fn := this.OnClick.Bind(this)
		GuiControl, +g, %hBtn%, %fn%
		GuiControl, +g, %hpgTrigger%, %fn%
	}
    OnClick() {
		CoordMode, Mouse, Relative
		
		hSlider := this.hProg
		GuiControlGet, SliderLine, %A_Gui%:Pos, % hSlider
		GuiControlGet, sliderVal, %A_Gui%:, %hSlider%
		ControlGet, Style, Style,,, ahk_id %hSlider%
		ControlGetPos, X, Y, W, H,, ahk_id %hSlider%
		VarSetCapacity(R, 8)
		SendMessage, 0x0407,, &R,, ahk_id %hSlider%
		R1 := NumGet(R, 0, "Int")
		R2 := NumGet(R, 4, "Int")
		
		
		while (GetKeyState("LButton")) {
			Sleep, 10
			MouseGetPos, XM, YM
			V := (V:=(Style&0x4 ? 1-(YM-Y)/H : (XM-X)/W))>=1 ? R2 : V<=0 ? R1 : Round(V*(R2-R1)+R1)
			if (LastV="") {
				LastV := V
			} else if (V != LastV) {
				LastV := V
				if this.ShowTooltip
					ToolTip % V
				this.pos(SliderLineW, SliderLineX) := V
			}
			GuiControl, text, % this.textfield, %V%
		}
		CoordMode, Mouse, %pre_CoordModeMouse%
	}
	
	pos[pgW := "", pgX := ""] {
		set {
			GuiControl,, % this.hProg, % value
			x := pgW * (value/this.rng_radio/15) + pgx
			GuiControl, Move, % this.hBtn, x%x%
			DllCall("InvalidateRect", "ptr", this.hBtn, "ptr", 0, "int", 0)
		}
	}
}

class CustomSlider2
{
	__New(Options:="", val:="", HBITMAP2:="", param_textfield:="") {
		if !RegExMatch(Options, "i)\bBackground\w+\b") {
			if RegExMatch(Options, "i)\bc\K\w+", bkColor)
				bkOpt := "Background"
		}
		this.textfield := param_textfield
		Gui, Add, Progress, h5 %Options% %bkOpt% hwndHPROG Disabled
		
		if RegExMatch(Options, "i)\bRange\K([\d-]+)-([\d-]+)", rng)
			this.rng_radio := Abs(rng2 - rng1)/15
		else
			this.rng_radio := 1
		
		GuiControlGet, pg, Pos, %HPROG%
		x := pgW * (val/this.rng_radio/15)
		
		Gui, Add, Pic, yp-5 x250 w15 h15 HWNDhBtn, % "HBITMAP:" HBITMAP2
		
		this.hProg := HPROG
		this.hBtn := hBtn
		
		fn := this.OnClick.Bind(this)
		GuiControl, +g, %hBtn%, %fn%
		GuiControl, +g, %hpgTrigger%, %fn%
	}
    OnClick() {
		CoordMode, Mouse, Relative
		
		hSlider := this.hProg
		GuiControlGet, SliderLine, %A_Gui%:Pos, % hSlider
		GuiControlGet, sliderVal, %A_Gui%:, %hSlider%
		ControlGet, Style, Style,,, ahk_id %hSlider%
		ControlGetPos, X, Y, W, H,, ahk_id %hSlider%
		VarSetCapacity(R, 8)
		SendMessage, 0x0407,, &R,, ahk_id %hSlider%
		R1 := NumGet(R, 0, "Int")
		R2 := NumGet(R, 4, "Int")
		
		
		while (GetKeyState("LButton")) {
			Sleep, 10
			MouseGetPos, XM, YM
			V := (V:=(Style&0x4 ? 1-(YM-Y)/H : (XM-X)/W))>=1 ? R2 : V<=0 ? R1 : Round(V*(R2-R1)+R1)
			if (LastV="") {
				LastV := V
			} else if (V != LastV) {
				LastV := V
				if this.ShowTooltip
					ToolTip % V
				this.pos(SliderLineW, SliderLineX) := V
			}
			GuiControl, text, % this.textfield, %V%
		}
		CoordMode, Mouse, %pre_CoordModeMouse%
	}
	
	pos[pgW := "", pgX := ""] {
		set {
			GuiControl,, % this.hProg, % value
			x := pgW * (value/this.rng_radio/60) + pgx
			GuiControl, Move, % this.hBtn, x%x%
			DllCall("InvalidateRect", "ptr", this.hBtn, "ptr", 0, "int", 0)
		}
	}
}

SetCueBanner(HWND, string) {
   static EM_SETCUEBANNER:=0x1501
   If !(HWND+0)
      GuiControlGet, HWND, HWND, %HWND%
   Return DllCall("SendMessageW", "ptr", hWnd, "Int", EM_SETCUEBANNER, "PTR", 1, "PTR", &string:=StrGet(&string,"UTF-16"))
}

zapisz:
Gui, submit, nohide

MsgBox, , ✓, Ustawienia zostały pomyślnie zapisane!.,
return

tab1:
GuiControl, Choose, TAB_BUTTON, 1
return
tab2:
GuiControl, Choose, TAB_BUTTON, 2
return
tab3:
GuiControl, Choose, TAB_BUTTON, 3
return
tab4:
GuiControl, Choose, TAB_BUTTON, 4
return
tab5:
GuiControl, Choose, TAB_BUTTON, 5
return

3GuiClose:
ExitApp
return
